name: main

on:
  push:
    # Publish `main` as `latest` tag.
    branches:
      - main

    # Publish version tags.
    tags:
      - v*

jobs:

  main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          repository: terminusdb/terminusdb
          path: terminusdb

      - name: Build image
        run: docker build . --tag terminusdb/terminusdb-builder:base

      - name: Install dependencies and build executable
        run: |
          docker run \
            --name test-terminusdb-container \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            terminusdb/terminusdb-builder:base \
            /bin/bash -c "make install-deps && make"
          docker commit \
            test-terminusdb-container \
            terminusdb/terminusdb-builder:test

      - name: Lint
        run: |
          docker run \
            --rm \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            terminusdb/terminusdb-builder:test \
            make lint

      - name: Unit tests
        run: |
          docker run \
            --rm \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            terminusdb/terminusdb-builder:test \
            make test

      - name: Integration tests
        run: |
          docker run \
            --rm \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            terminusdb/terminusdb-builder:test \
            /app/terminusdb/terminusdb store init
          docker run \
            --name server-running \
            --detach \
            --net=host \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            terminusdb/terminusdb-builder:test \
            /app/terminusdb/terminusdb serve
          docker run \
            --rm \
            --net=host \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            --workdir /app/terminusdb/tests \
            terminusdb/terminusdb-builder:test \
            /bin/bash -c "npm install-ci-test && npm run check"
          docker stop server-running
