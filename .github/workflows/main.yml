name: main

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository }}

jobs:

  main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          repository: terminusdb/terminusdb
          path: terminusdb

      - uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ${{ env.IMAGE }}:base
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install dependencies and build executable
        run: |
          docker run \
            --name test-terminusdb-container \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            ${IMAGE}:base \
            /bin/bash -c "make install-deps && make"
          docker commit \
            test-terminusdb-container \
            ${IMAGE}:test

      - name: Lint
        run: |
          docker run \
            --rm \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            ${IMAGE}:test \
            make lint

      - name: Unit tests
        run: |
          docker run \
            --rm \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            ${IMAGE}:test \
            make test

      - name: Integration tests
        run: |
          docker run \
            --rm \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            ${IMAGE}:test \
            /app/terminusdb/terminusdb store init
          docker run \
            --name server \
            --detach \
            --net=host \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            ${IMAGE}:test \
            /app/terminusdb/terminusdb serve
          docker run \
            --name client \
            --rm \
            --net=host \
            --volume $(pwd)/terminusdb:/app/terminusdb \
            --workdir /app/terminusdb/tests \
            ${IMAGE}:test \
            /bin/bash -c "npm install-ci-test && npm run check"
          docker stop server

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}

      - name: Push
        uses: docker/build-push-action@v3
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
